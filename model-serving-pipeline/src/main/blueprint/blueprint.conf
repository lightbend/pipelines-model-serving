blueprint {
  streamlets {
    winedata-ingress = pipelines.examples.ingestor.WineDataIngress
    winedata-formatter = pipelines.examples.ingestor.WineDataParser
    error-logger = pipelines.examples.ingestor.InvalidDataLogger
    mlmodel-ingress = pipelines.examples.ingestor.MlModelIngress
//    mlmodel-formatter = pipelines.examples.ingestor.FormatMLModel
//    mlmerge = pipelines.examples.modelserving.MergeMLActions
//    mlengine = pipelines.examples.modelserving.MLModelStreamlet
    influx-egress = pipelines.examples.ml.egress.InfluxDBEgress
    merge = pipelines.examples.modelserving.MergeModelsAndRecords
    model-update-logger = pipelines.examples.ingestor.ModelUpdateLogger
  }
  connections {
    winedata-ingress.out = [winedata-formatter.in]
    winedata-formatter.out-0 = [error-logger.in]
//    winedata-formatter.out-1 = [mlmerge.in-0]
//    mlmodel-ingress.out = [mlmodel-formatter.in]
//    mlmodel-formatter.out = [mlmerge.in-1]
//    mlmerge.out = [mlengine.in]
//    mlengine.out-0 = [influx-egress.in]
    winedata-formatter.out-1 = [merge.in-0]
    mlmodel-ingress.out = [merge.in-1]
    merge.out-0 = [influx-egress.in]
    merge.out-1 = [model-update-logger.in]
  }
}
